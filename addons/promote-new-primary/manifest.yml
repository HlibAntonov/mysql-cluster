type: update
name: Promote new Primary Add-on
id: promote-new-primary

description:
  text:  Promote new Primary Add-on
  short: Promote new Primary Add-on

logo: /images/database-corruption-check.png

baseUrl: https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/JE-66025/addons

globals:
  scriptName: ${env.name}-promote-master

mixins:
  - https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/v3.0.0/scripts/common.yml

targetNodes:
  nodeGroup: 
    - proxy

settings:
  main:
    fields:
      - name: primary_idle_time
        caption: Primary Idle Time (sec)
        type: spinner
        min: 60
        max: 3600

buttons:
  - name: configure
    caption: Primary Idle Time
    confirmText: Change primary idle time?.
    settings: main
    loadingText: Applaying configuration...
    action: idleTimeConfigure

onInstall: createScript

actions:
  idleTimeConfigure:
    cmd[proxy]: |-
      
  createScript:
    script: |
      let Response = com.hivext.api.Response;
      let Transport = com.hivext.api.core.utils.Transport;
      let StrSubstitutor = org.apache.commons.lang3.text.StrSubstitutor;
      let scriptBody = new Transport().get("${baseUrl}/promote-new-primary/scripts/promote-master.js");
      let random = com.hivext.api.utils.Random.getPswd(64);
      
      scriptBody = new StrSubstitutor({token: random}, "${", "}").replace(scriptBody);
      
      let resp = api.dev.scripting.GetScript(appid, session, "${globals.scriptName}");
      if (resp.result == Response.OK) {
      //delete the script if it already exists
        api.dev.scripting.DeleteScript(appid, session, "${globals.scriptName}");
      }
      
      resp = api.dev.scripting.CreateScript(appid, session, "${globals.scriptName}", "js", scriptBody)
      if (resp.result != 0) return resp;
      java.lang.Thread.sleep(1000);

      //build script to avoid caching
      api.dev.scripting.Build(appid, session, "${globals.scriptName}");
      let cronCommand = "echo \"%(cronTime) su - root -c \\\"%(scriptPath) '${platformUrl}${globals.scriptName}?appid=" + appid + "&token=" + random + "'\\\"\" >> /var/spool/cron/root";
      return api.env.control.ExecCmdById("${env.name}", session, "${nodes.proxy.master.id}", toJSON([{ command: cronCommand }]), true, "root");
